extern print_i64(n: i64);

struct Foo {
    x: i64, 
    y: i64,
}

struct Bar {
    b: i64,
    #transparent foo: Foo,
}

enum Option {
    #transparent Some: _T!,
    None,
}

fn unwrap_or(o: Option!(T: _T!), default: T) T {
    if let Some(unwrapped) = o {
        return unwrapped;
    } else {
        return default;
    }
}

fn main() i64 {
    let #transparent s = Option::Some(Bar { 3, _{ 4, 5 } });

    b |> print_i64;

    return 0;
}
