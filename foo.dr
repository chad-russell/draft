extern put_char(ch: u8);
extern print_str(ch: *u8, len: i64);
extern print_i64(n: i64);

fn print_string(s: string) {
    print_str(s.data, s.len);
    return;
}

interface IFoo {
    fn foo() i64;
    fn bar() i64;
}

struct Foo {
    x: i64,
    y: i64,
}

impl IFoo for Foo { 
    fn bar() _ {
        print_string("bar for Foo\n");
        return self.x - self.y;
    }
    
    fn foo() _ {
        print_string("foo for Foo\n");
        return self.x + self.y;
    }
}

fn main() i64 {
    let f = Foo { 3, 4 };
    let iface = f as IFoo;

    iface.vtable.foo(#cast iface.data) |> print_i64;
    // iface->foo() |> print_i64;
    
    return 0;
}